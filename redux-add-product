//store
import { applyMiddleware, createStore } from 'redux';
import thunk from 'redux-thunk';
import rootReducer from './rootReducer';



const store = createStore(rootReducer,(applyMiddleware(thunk)) );

export default store;

//reducers

import { ADD_PRODUCT } from "./productTypes";

export const initialState = {
    basket: [],
};

export const getBasketTotal = (basket) =>
    basket?.reduce((amount, item) => item.price + amount, 0)

const productReducer = (state = initialState, action) => {
    
    console.log("action", action.payload);
    if(action.payload !== undefined) {
        state.basket.push(action.payload)
        console.log(state)
    }
    
    switch(action.type) {
        case ADD_PRODUCT:
            return {
                ...state,
                basket: [...state.basket],
                
            }
        default: return state
    }
}

export default productReducer;
//action types
export const ADD_PRODUCT = 'ADD_PRODUCT';

//action creator
import { ADD_PRODUCT } from './productTypes';
export const addProduct = (data) => {
    return {
        type: ADD_PRODUCT,
        payload: data
    }
}

//useDispatch components
import React, { useEffect, useState } from 'react';
import { useDispatch } from 'react-redux';
import { Link } from 'react-router-dom';
// import {useStateValue} from "../../../StateProvider";
import { addProduct } from '../../../redux';
import './Product.css';
function Product({ id, title, image, price, rating}) {
  /* const [{basket}, dispatch] = useStateValue()
  const addToBasket = () => {
     dispatch({
       type: 'ADD_TO_BASKET',
       item: {
         id: id,
         title: title,
         image: image,
         price:price,
         rating: rating,
       },
     })
  } */
  
const dispatch = useDispatch();
  const [items, setItems] = useState(null);
  useEffect(() => {
    
    setItems({id, title, image, price, rating})
    
  }, [id, image, price, rating, title])
  

  return (
    <div className="product">
      <div className="product__info">
        <p className="product__title">
          <Link to={"/product/"+id}>{title}</Link>
        </p>
        <div className="d-flex">
          <span className="product__price">
            <small>$</small>
            <strong>{price}</strong>
          </span>
          <span className="product__rating">
            {Array(rating)
              .fill()
              .map((_, i) => {
                return <p>⭐</p>;
              })}
          </span>
        </div>
      </div>
      <img src={image} alt="" />
      <button onClick={() => dispatch(addProduct(items))}>Add to Basket</button>
    </div>
  );
}


export default Product;

//use Selector Components
import React from 'react';
import { useStateValue } from '../../../StateProvider';
import './CheckoutProduct.css';

function CheckoutProduct({ id, image, title, price, rating, hideButton }){
    const [{ basket }, dispatch] = useStateValue();

    const removeFormBasket = () => {
        dispatch({
          type: "REMOVE_FROM_BASKET",
          id: id,
        });
        
    }
    return (
      <div className="checkoutProduct">
        <img src={image} className="checkoutProduct__image" alt="" />
        <div className="checkoutProduct__info">
          <p className="checkoutProduct__title">{title}</p>
          <p className="checkoutProduct__price">
            <small>$</small>
            <strong>{price}</strong>
          </p>
          <div className="checkoutProduct__rating">
            {Array(rating)
              .fill()
              .map((_, i) => {
                return <p>⭐</p>;
              })}
          </div>
          {!hideButton && (
            <button onClick={removeFormBasket}>Remove from Basket</button>
          )}
        </div>
      </div>
    );
}

export default CheckoutProduct
